<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.rhinoceros.mall.dao.dao.OrderDao">

    <!--通过userId查找订单-->
    <select id="findByUserId" resultType="Order" parameterType="Long">
        SELECT *
        FROM `order`
        WHERE user_id = #{userId}
    </select>

    <select id="findByUserIdAndStatus" resultType="Order">
        SELECT *
        FROM `order`
        <where>
            user_id = #{userId}
            <if test="status!=null">
                AND status = #{status}
            </if>
        </where>
        ${page.queryString}
    </select>

    <select id="countByUserIdAndStatus" resultType="Integer">
        SELECT count(*)
        FROM `order`
        <where>
            user_id = #{userId}
            <if test="status!=null">
                AND status = #{status}
            </if>
        </where>
    </select>

    <update id="updateSelectionById" parameterType="Order">
        UPDATE `order`
        <set>
            <if test="status!=null">
                status = #{status},
            </if>
            <if test="createAt!=null">
                create_at = #{createAt},
            </if>
            <if test="payAt!=null">
                pay_at = #{payAt},
            </if>
            <if test="deliverAt!=null">
                deliver_at = #{deliverAt},
            </if>
            <if test="finishAt!=null">
                finish_at = #{finishAt},
            </if>
            <if test="totalPrice!=null">
                total_price = #{totalPrice},
            </if>
            <if test="expressNum!=null">
                express_num = #{expressNum},
            </if>
            <if test="addressId!=null">
                address_id = #{addressId},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <select id="findById" resultType="Order" parameterType="Long">
        SELECT *
        FROM `order`
        WHERE id = #{id}
    </select>
    <!--添加所有订单-->
    <insert id="addAll" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `order`
        (status,identifier,create_at,total_price,address_id,user_id,product_id,product_num)
        VALUES
        <foreach collection="orders" item="order" separator=",">
            (
            #{order.status},
            #{order.identifier},
            #{order.createAt},
            #{order.totalPrice},
            #{order.addressId},
            #{order.userId},
            #{order.productId},
            #{order.productNum}
            )
        </foreach>
    </insert>
    <!--根据订单状态返回订单信息-->
    <select id="findByStatus"  resultType="Order">
        SELECT *
        FROM `order`
        WHERE status = #{status}
         ${page.queryString}
    </select>
    <!--根据订单号删除订单-->
    <delete id="deleteByIdentifier" parameterType="String">
        DELETE FROM `order`
        WHERE identifier = #{identifier}
    </delete>
    <!--统计某个订单状态下的订单数量-->
    <select id="countBystatus" resultType="Long">
        SELECT count(*) FROM `order`
        WHERE status = #{status}
    </select>
</mapper>